2025-04-05 12:02:35,743 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 12:02:42,795 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 12:02:47,892 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 12:03:05,232 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 12:03:05,558 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.23503929653812758, best pos: [-3.25390236  0.4814764  -1.12744998  2.39427585 -1.41702696 -0.17541081
  2.14333908  1.56822468  1.00170732 -1.26579245 -0.41971509 -2.94074025
  2.7489274 ]
2025-04-05 12:03:07,478 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 12:03:07,815 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.14864632035693887, best pos: [ 0.19611661 -1.18492404  0.94459195  1.5577646   0.67188043 -0.5135765
  0.3467423   2.01256263  0.14045318  0.10124233  0.29511352  1.52219439
  0.39010896]
2025-04-05 12:03:13,227 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 12:03:16,682 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 12:03:17,015 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.10538555745518044, best pos: [-0.06384936  0.61850868  0.05365457  0.27228266  1.95715634  1.60784739
  0.29661951  0.48290204  0.45019107  1.64234135  1.1755023   1.00446568
  0.16876637]
2025-04-05 12:03:25,631 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 12:03:29,152 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 12:03:29,473 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.2266550945705232, best pos: [ 1.36281922  0.51814918  1.21431479  2.15550993 -1.27568289  1.84225099
  1.27035341  1.49329407  1.59034572  1.69529798  0.33733961  1.29526583
  0.77733546]
2025-04-05 12:03:33,464 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 12:03:33,800 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.036301412376693695, best pos: [ 1.33475204 -0.37364997  1.09348897  1.44855097  0.02579913  0.70692201
 -0.04649849  0.04679122  0.22465016  1.0837799   0.584251    0.36822507
  0.62402373]
2025-04-05 12:04:07,399 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 12:08:55,493 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 12:08:55,955 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.04590158908001975, best pos: [ 0.20021798  0.21520582  0.2112607  -0.2579771   0.07521798  0.38401805
  0.06918796 -0.49949912  0.44866099  0.28835     0.25496107  0.63985867
 -0.07065264]
2025-04-05 12:08:59,638 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 12:09:00,078 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.009764777906320715, best pos: [ 0.17323031  0.2064239  -0.18288652 -0.16488378 -0.17508944  0.1093268
  0.09824508  0.10434762 -0.02952796  0.23903552 -0.06048886  0.17946244
 -0.39031284]
2025-04-05 12:09:02,396 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 12:09:02,838 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.06498795738549061, best pos: [-0.52700793  0.40420745  0.85220416  0.68444545  0.47496016 -0.22584595
 -0.00875682  0.07361225 -0.09980719 -0.47532539  0.25630049 -0.24861748
 -0.11491254]
2025-04-05 12:14:34,105 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 12:15:45,366 - pyswarms.backend.generators - ERROR - generate_swarm() takes an int for n_particles and dimensions and an array for bounds
Traceback (most recent call last):
  File "/home/gustavo/.venv/experimentos_doutorado/lib/python3.13/site-packages/pyswarms/backend/generators.py", line 81, in generate_swarm
    pos = center * np.random.uniform(
                   ~~~~~~~~~~~~~~~~~^
        low=min_bounds, high=max_bounds, size=(n_particles, dimensions)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "numpy/random/mtrand.pyx", line 1190, in numpy.random.mtrand.RandomState.uniform
  File "_common.pyx", line 621, in numpy.random._common.cont
  File "_common.pyx", line 529, in numpy.random._common.cont_broadcast_2
TypeError: 'tuple' object cannot be interpreted as an integer
2025-04-05 12:15:53,072 - pyswarms.backend.generators - ERROR - generate_swarm() takes an int for n_particles and dimensions and an array for bounds
Traceback (most recent call last):
  File "/home/gustavo/.venv/experimentos_doutorado/lib/python3.13/site-packages/pyswarms/backend/generators.py", line 81, in generate_swarm
    pos = center * np.random.uniform(
                   ~~~~~~~~~~~~~~~~~^
        low=min_bounds, high=max_bounds, size=(n_particles, dimensions)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "numpy/random/mtrand.pyx", line 1190, in numpy.random.mtrand.RandomState.uniform
  File "_common.pyx", line 621, in numpy.random._common.cont
  File "_common.pyx", line 529, in numpy.random._common.cont_broadcast_2
TypeError: 'tuple' object cannot be interpreted as an integer
2025-04-05 12:17:02,410 - pyswarms.backend.generators - ERROR - generate_swarm() takes an int for n_particles and dimensions and an array for bounds
Traceback (most recent call last):
  File "/home/gustavo/.venv/experimentos_doutorado/lib/python3.13/site-packages/pyswarms/backend/generators.py", line 81, in generate_swarm
    pos = center * np.random.uniform(
                   ~~~~~~~~~~~~~~~~~^
        low=min_bounds, high=max_bounds, size=(n_particles, dimensions)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "numpy/random/mtrand.pyx", line 1190, in numpy.random.mtrand.RandomState.uniform
  File "_common.pyx", line 621, in numpy.random._common.cont
  File "_common.pyx", line 529, in numpy.random._common.cont_broadcast_2
TypeError: 'tuple' object cannot be interpreted as an integer
2025-04-05 12:17:15,093 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 12:17:15,491 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.23680109729313142, best pos: [ 8.72502491e-02 -1.81063486e-04  2.00892503e-02 -6.64649291e-02
  9.86173577e-03 -8.67179862e-02 -8.82812342e-03  3.61270835e-01
  1.68034677e-02 -9.70589084e-03 -1.07837844e-01  2.71651190e-01
  1.88559942e-02]
2025-04-05 12:17:30,666 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 12:17:50,830 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 12:18:30,844 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:20:10,403 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:20:49,013 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:21:04,815 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:21:23,021 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.58, best pos: [  5.66244281   5.30094468   8.43561773 348.3838727 ]
2025-04-05 14:22:35,271 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:23:49,681 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:25:29,039 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.665, best pos: [  8.847441     4.62114807   5.51648914 265.26296895]
2025-04-05 14:26:38,060 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:28:18,990 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.71, best pos: [  5.51980236   2.41559153   6.13838588 390.16511593]
2025-04-05 14:30:43,396 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:30:47,842 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.675, best pos: [ 7.83698961  4.3825217   7.78880778 18.06525578]
2025-04-05 14:31:01,042 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:31:04,847 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.675, best pos: [ 7.83698961  4.3825217   7.78880778 18.06525578]
2025-04-05 14:31:06,844 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:31:10,707 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.675, best pos: [ 7.83698961  4.3825217   7.78880778 18.06525578]
2025-04-05 14:31:55,928 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:31:59,792 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.675, best pos: [ 7.83698961  4.3825217   7.78880778 18.06525578]
2025-04-05 14:34:57,348 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:35:02,007 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.5555555555555556, best pos: [  8.03166445   2.02118142   9.44743285 487.14985606]
2025-04-05 14:35:06,489 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:35:10,422 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.5555555555555556, best pos: [  8.03166445   2.02118142   9.44743285 487.14985606]
2025-04-05 14:35:49,238 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:35:53,355 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.5555555555555556, best pos: [  8.03166445   2.02118142   9.44743285 487.14985606]
2025-04-05 14:36:04,554 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:36:08,459 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.5555555555555556, best pos: [  8.03166445   2.02118142   9.44743285 487.14985606]
2025-04-05 14:36:45,523 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:36:49,610 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.5555555555555556, best pos: [  8.03166445   2.02118142   9.44743285 487.14985606]
2025-04-05 14:36:52,901 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:36:56,709 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.5555555555555556, best pos: [  8.03166445   2.02118142   9.44743285 487.14985606]
2025-04-05 14:37:28,651 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:37:32,926 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.5555555555555556, best pos: [  8.03166445   2.02118142   9.44743285 487.14985606]
2025-04-05 14:37:36,632 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:37:40,665 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.5555555555555556, best pos: [  8.03166445   2.02118142   9.44743285 487.14985606]
2025-04-05 14:37:50,565 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:38:14,136 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:38:18,450 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.5555555555555556, best pos: [  7.35248335   9.7178675    7.50424008 418.64497324]
2025-04-05 14:38:38,758 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:38:43,303 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.5555555555555556, best pos: [  7.35248335   9.7178675    7.50424008 418.64497324]
2025-04-05 14:39:45,665 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:41:25,752 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:42:21,407 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:42:27,061 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:42:41,825 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.7222222222222222, best pos: [131.3576201    1.75832939   4.98410887   6.72573001]
2025-04-05 14:43:24,463 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:43:39,069 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.7222222222222222, best pos: [131.3576201    1.75832939   4.98410887   6.72573001]
2025-04-05 14:43:51,710 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:44:14,845 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.18518518518518523, best pos: [187.86264565   5.10315669   6.35746182   6.06881716]
2025-04-05 14:48:55,571 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:49:20,151 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.18518518518518523, best pos: [187.86264565   5.10315669   6.35746182   6.06881716]
2025-04-05 14:49:23,240 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:59:08,631 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 15:00:03,163 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.16666666666666663, best pos: [96.56594647  5.00680441  8.63466171  3.08446524]
2025-04-05 15:01:06,195 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 15:01:58,425 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.16666666666666663, best pos: [96.56594647  5.00680441  8.63466171  3.08446524]
2025-04-05 15:02:30,191 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 15:03:22,715 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.16666666666666663, best pos: [96.56594647  5.00680441  8.63466171  3.08446524]
2025-04-05 15:03:48,417 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 15:04:41,613 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.16666666666666663, best pos: [96.56594647  5.00680441  8.63466171  3.08446524]
2025-04-05 15:49:42,202 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 15:50:44,610 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.18518518518518523, best pos: [238.21470014   3.48029964   6.44754368   6.2978295 ]
2025-04-05 15:54:00,383 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 15:54:13,169 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 15:55:28,115 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.18518518518518523, best pos: [238.21470014   3.48029964   6.44754368   6.2978295 ]
2025-04-05 16:15:10,372 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 16:16:12,573 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.18518518518518523, best pos: [238.21470014   3.48029964   6.44754368   6.2978295 ]
2025-04-05 16:20:01,067 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 16:21:02,986 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.18518518518518523, best pos: [238.21470014   3.48029964   6.44754368   6.2978295 ]
2025-04-05 17:00:39,892 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 17:01:38,876 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.18518518518518523, best pos: [238.21470014   3.48029964   6.44754368   6.2978295 ]
2025-04-05 17:02:23,840 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 17:03:34,167 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.18518518518518523, best pos: [238.21470014   3.48029964   6.44754368   6.2978295 ]
2025-04-06 11:06:10,828 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-06 11:07:18,956 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.18518518518518523, best pos: [238.21470014   3.48029964   6.44754368   6.2978295 ]
2025-04-06 11:15:03,381 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-06 11:16:01,291 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.18518518518518523, best pos: [238.21470014   3.48029964   6.44754368   6.2978295 ]
2025-04-13 20:54:11,271 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-13 20:55:21,244 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-13 20:55:34,456 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-13 21:24:26,137 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-13 21:29:48,677 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-13 21:32:10,858 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-13 21:33:09,299 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-13 21:33:18,954 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-13 21:34:45,735 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-13 21:56:39,992 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-14 00:24:37,805 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-14 00:33:26,478 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-14 00:33:49,474 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-14 00:52:54,604 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-14 00:53:27,431 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-14 00:54:13,652 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-14 00:54:58,795 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-14 00:56:03,095 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-14 00:56:56,924 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-14 00:57:45,910 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-14 00:58:20,046 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-14 00:59:28,885 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-14 01:02:05,315 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-14 01:05:12,484 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-14 01:05:43,631 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-14 01:07:54,348 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-14 01:17:14,558 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-14 01:45:24,057 - pyswarms.single.global_best - INFO - Optimize for 2 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-14 01:48:19,288 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.2538333333333333, best pos: [4.59524052e+00 7.73323478e+02 5.13140360e+02 2.05221197e+02
 4.06795610e+00 9.29933327e+00 1.55510276e+00 4.49181309e+02
 4.63432089e+00 6.89061107e+00 7.33568645e+00 6.04250649e-01
 1.69161173e+02 7.22082243e+02 2.36662384e+02 9.19607617e+00
 5.53997732e+00 5.96554555e+00 3.55439375e+02 5.41338577e+00
 2.83296266e+00 4.04689421e+00 5.11911052e-01 4.76344580e+02
 8.28551006e+02 1.14787657e+02 8.89058811e+00 6.63951120e+00
 1.16756222e+00 7.55451386e+01 8.88345781e+00 8.29591696e+00
 7.77876531e+00 1.00071424e-01 8.07385438e+02 7.74691839e+02
 3.69468938e+02 7.69499072e+00 5.84265548e+00 4.56962718e+00
 1.51709097e+02 9.55421859e+00 6.40814870e+00 8.50453361e+00
 2.72299244e-01 6.42642843e+02 9.99300905e+02 3.38609355e+02
 6.07831404e+00 3.63268278e+00 3.06376963e+00 2.47852692e+02
 1.67538518e+00 7.43749645e+00 4.79475312e+00 8.60999978e-01
 8.13434539e+02 7.08083525e+02 4.09055171e+02 9.69836694e+00
 9.68741431e+00 6.02782535e+00 2.46095978e+01 6.49319253e+00
 8.73061839e+00 3.34069475e+00 1.99826573e-01 6.97475290e+02
 9.97063237e+01 3.94420017e+02 6.70338677e+00 7.52633460e+00
 5.58054827e+00 4.86428645e+02 3.15804733e+00 9.68074699e+00
 7.59031910e+00 8.02090937e-01 8.42011714e+02 2.20876920e+02
 2.54130359e+02 9.23614858e+00 8.24143518e+00 6.92006615e+00
 4.63118650e+02 1.64030600e+00 7.72951418e+00 2.59103583e+00
 9.22578502e-01 3.33228767e+02 4.73925080e+02 3.01901613e+01
 3.44829209e+00 8.92380738e+00 1.44017346e+00 2.76022393e+02
 6.36875552e+00 5.76613020e+00 7.92426815e+00 7.41720627e-01
 1.71532682e+02 2.35348608e+02 4.53712845e+02 3.47792342e+00
 7.87714591e+00 7.84627575e+00 1.14700469e+01 9.55219835e+00
 4.76005409e+00 2.83109438e+00 5.56746126e-01 5.90000932e-01
 6.05827277e-01 8.56320760e-01 3.67238429e-01 4.69170659e-01
 2.91659714e-01 9.83114491e-01 8.82405329e-01 9.44245052e-01
 8.45154299e-01]
2025-04-14 01:48:23,610 - pyswarms.single.global_best - INFO - Optimize for 2 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-14 01:51:38,267 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.33399999999999996, best pos: [5.27681600e+00 8.25507181e+02 7.97097231e+02 7.08366760e+01
 3.54250233e+00 5.16362090e+00 8.27039391e+00 2.48872830e+02
 8.91900501e+00 8.57242128e+00 9.15261367e+00 8.45895312e-01
 1.95075493e+02 5.21929126e+02 3.49013058e+02 7.58854513e+00
 2.72624411e+00 5.45035616e+00 7.41900904e+00 5.33902716e+00
 9.88623528e+00 4.26741056e+00 4.38248207e-01 4.77748471e+02
 9.99694308e+02 1.22295510e+02 9.21217487e+00 7.49121164e+00
 2.92850253e+00 1.91131942e+01 9.39437378e+00 7.47190887e+00
 1.78512699e+00 7.49974547e-01 3.62282991e+02 9.37526794e+02
 4.62572939e+02 1.90410063e+00 5.80427709e+00 3.11112952e+00
 3.06202369e+02 4.11240437e+00 5.83351704e+00 9.73761059e+00
 4.36756034e-01 7.94310935e+02 4.02117382e+02 2.28815758e+02
 7.57003903e+00 5.94151612e+00 6.40432827e+00 8.17476118e+01
 6.42614149e+00 3.40918780e+00 6.82200938e+00 7.21238701e-01
 1.92537046e+02 2.56556546e+02 3.85725506e+02 6.99343945e+00
 5.66922446e+00 9.59194953e+00 4.51304881e+02 4.07414792e+00
 7.06407728e+00 8.87298537e+00 3.99568437e-01 2.40491911e+00
 1.07246904e+02 3.46072466e+02 6.76659917e+00 5.38803938e+00
 4.98882725e+00 4.64259629e+02 5.25483769e+00 3.49119916e+00
 6.11295653e+00 1.69659622e-01 3.50138983e+02 4.89606541e+02
 4.87164175e+02 5.07026284e+00 4.12303268e+00 4.35807757e+00
 3.31717055e+02 9.32209787e+00 4.91809631e+00 1.25378516e+00
 5.14929834e-01 4.55279064e+01 9.14812815e+02 4.24702802e+01
 2.35089972e+00 7.75889915e+00 4.93231239e+00 1.05913523e+02
 2.58345551e+00 9.80503461e+00 1.48823410e+00 1.61468135e-01
 9.45332191e+02 2.24865677e+02 9.10800836e+01 2.35615798e+00
 7.55620317e+00 1.87462347e+00 1.03099843e+02 8.67770283e+00
 4.32044866e+00 2.40199887e+00 1.79396370e-01 8.38563216e-01
 4.39446525e-01 7.61570448e-01 4.42101368e-01 9.40695876e-01
 6.22985525e-01 9.53528326e-01 6.13443434e-01 5.42343299e-01
 6.02843889e-01]
2025-04-14 01:51:42,387 - pyswarms.single.global_best - INFO - Optimize for 2 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-14 01:54:53,541 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.295, best pos: [6.94060562e+00 4.22877736e+02 9.68282117e+02 3.76737142e+02
 5.53799636e+00 6.65628747e+00 4.71140292e+00 1.80651710e+02
 7.16987289e+00 4.57207603e+00 5.58578632e+00 3.60723000e-01
 5.75935118e+02 3.26480219e+02 3.73497797e+02 7.79666893e+00
 7.02523958e+00 9.06490916e+00 2.57162350e+02 7.81746445e+00
 5.03804462e+00 8.44267476e+00 3.69550844e-01 2.28341271e+02
 9.78327814e+02 4.11417995e+02 5.60576034e+00 8.14277595e+00
 4.00951742e+00 4.55588833e+02 6.49994879e+00 7.41421057e+00
 5.20325680e+00 5.80041001e-01 3.55534149e+01 5.91158598e+01
 2.53938689e+02 6.56258088e+00 4.66059034e+00 1.94001609e+00
 2.11267206e+02 4.99938577e+00 8.86881106e+00 5.23708018e+00
 5.64322404e-01 7.39890221e+02 3.81757472e+02 2.81995018e+02
 9.92457170e+00 5.43591428e+00 6.18278741e+00 1.33568947e+02
 1.23557314e+00 5.99450919e+00 9.84280941e+00 6.03666801e-01
 7.11419379e+02 1.18497439e+02 2.68791144e+02 2.03372613e+00
 5.11848217e+00 3.41729703e+00 1.35056861e+02 3.05895986e+00
 8.37032250e+00 8.38405452e+00 8.98587053e-01 9.15916860e+02
 5.91265423e+02 1.61884584e+02 9.79515988e+00 7.90917293e+00
 5.03603884e+00 4.32986521e+02 7.75975737e+00 4.12766263e+00
 9.91689011e+00 6.02216074e-01 8.44305814e+01 8.14515309e+02
 1.93109210e+02 6.08730899e+00 8.90032440e+00 8.36126448e+00
 3.92940025e+02 4.94439628e+00 7.17410765e+00 3.22910916e+00
 7.51918338e-01 8.71742907e+02 4.01957841e+02 3.84437287e+02
 9.40824877e+00 9.48960107e+00 8.64815040e+00 4.21839658e+02
 9.50833648e+00 4.23080190e+00 9.90733375e+00 9.05220709e-01
 9.75202301e+02 3.94807767e+02 4.75546860e+02 7.33415508e+00
 6.39022999e+00 7.56452348e+00 2.04140973e+02 9.15406717e+00
 3.71214514e+00 9.18216081e+00 5.96245748e-01 7.74266677e-01
 2.55630048e-01 6.02049226e-01 4.32920481e-01 8.24241170e-01
 6.22314368e-01 6.32097593e-01 2.91025160e-01 9.51534514e-01
 6.16015423e-01]
2025-04-14 01:54:58,619 - pyswarms.single.global_best - INFO - Optimize for 2 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-14 01:55:06,884 - pyswarms.single.global_best - INFO - Optimize for 2 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-14 01:55:41,351 - pyswarms.single.global_best - INFO - Optimize for 7 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-14 01:55:52,708 - pyswarms.single.global_best - INFO - Optimize for 7 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-14 03:32:27,802 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.25888888888888884, best pos: [7.16864739e+00 5.84029322e+02 6.86400495e+02 8.01467658e+01
 4.48190279e+00 6.08431528e+00 1.72722415e+00 2.30880029e+02
 6.32323735e+00 5.52349378e+00 6.35087932e+00 2.33429840e-01
 7.41270354e+02 1.73064285e+02 9.82964768e+00 5.36484457e+00
 5.69755723e+00 5.41210201e+00 9.71429461e+01 4.13310890e+00
 4.93514202e+00 2.47452745e+00 4.01586572e-01 5.52054915e+02
 4.47579826e+02 1.64545419e+02 2.38752891e+00 5.51979034e+00
 6.82975357e+00 1.43956989e+02 7.87845235e+00 7.04132997e+00
 5.74387103e+00 2.72560637e-01 3.84772575e+02 7.32513893e+02
 3.98880318e+02 8.66291671e+00 4.85471350e+00 7.36303879e+00
 2.86494459e+02 9.42277711e+00 6.56190414e+00 3.32788464e+00
 9.53676834e-01 4.67682183e+02 1.26139174e+01 1.95395898e+02
 5.56254747e+00 6.64540174e+00 5.33310885e+00 3.05438878e+02
 6.16899540e+00 7.90864889e+00 3.59206284e+00 4.03997475e-01
 4.91950289e+02 4.85995566e+02 9.62969095e+00 3.42641402e+00
 7.08103403e+00 6.10725874e+00 1.55316789e+02 5.91718144e+00
 8.33905358e+00 3.37296026e+00 6.78750577e-01 4.42641567e+02
 3.10700202e+02 3.66112854e+02 7.19852358e+00 6.62227803e+00
 2.83635847e+00 1.48089024e+02 4.71367885e+00 5.45598887e+00
 5.59510553e+00 7.05305698e-01 8.23001216e+01 6.66338911e+02
 4.50909123e+02 2.50097354e+00 6.40979920e+00 7.42476015e+00
 4.65766081e+02 3.71348855e+00 3.87032963e+00 8.04543070e+00
 9.59527357e-01 7.35068236e+02 1.77768701e+02 2.68804176e+00
 1.02403902e+00 4.45183672e+00 2.38883721e+00 1.02491808e+02
 8.79709700e+00 7.23724530e+00 1.90946998e+00 9.97599269e-01
 5.13914050e+02 5.95835060e+01 3.49707660e+02 4.04600303e+00
 9.68701553e+00 3.45899309e+00 4.39078672e+02 3.51185469e+00
 8.44438106e+00 3.67648728e+00 5.71982517e-01 5.31300155e-01
 8.40023683e-01 7.39432556e-01 2.31707837e-01 2.36264700e-01
 6.47716088e-01 1.68586421e-01 1.51803955e-01 5.56452706e-01
 8.61217924e-01]
2025-04-14 03:32:36,348 - pyswarms.single.global_best - INFO - Optimize for 7 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-14 05:06:44,319 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.2511111111111111, best pos: [7.41115859e+00 8.04960185e+02 5.51764652e+02 7.77791978e+01
 6.86268054e+00 2.34494029e+00 8.88198267e+00 3.33375868e+02
 1.18312277e+00 9.65531613e+00 6.17653119e+00 6.09172701e-01
 9.29944580e+02 6.96614664e+02 2.41527945e+02 9.56582638e+00
 9.94068367e+00 3.16029194e+00 2.82802455e+01 4.35150514e+00
 2.27419781e+00 6.09210755e+00 9.58035633e-01 6.67676531e+02
 2.52603414e+02 1.78197537e+02 8.20192470e+00 2.41450430e+00
 3.51948539e+00 3.14327023e+02 9.31926360e+00 2.93231031e+00
 5.67284675e+00 5.76450782e-01 2.77946189e+02 6.74330098e+02
 4.54846739e+01 1.87731801e+00 9.38410169e+00 1.56338300e+00
 9.84014661e+01 1.00631433e+00 6.92878412e+00 9.92469821e+00
 9.07088860e-01 4.64701089e+02 9.99859655e+02 1.74055231e+02
 2.65316058e+00 3.83929034e+00 5.20906901e+00 1.02123732e+02
 9.34801060e+00 6.82150652e+00 4.38962971e+00 3.19595580e-01
 6.35062342e+02 4.63902283e+02 1.48633259e+02 4.81012655e+00
 5.44141440e+00 9.32808409e+00 2.29175895e+02 8.37385189e+00
 3.30438711e+00 2.51599351e+00 4.77601617e-01 7.66597188e+02
 1.92781754e+02 9.15944111e+01 9.85958909e+00 4.21564545e+00
 2.00027178e+00 2.90951147e+02 5.29127893e+00 9.80728446e+00
 6.86230936e+00 7.11517106e-01 1.34028870e+02 5.01013908e+00
 1.50177648e+02 2.20848216e+00 5.86169202e+00 3.30671885e+00
 2.66638120e+02 6.60601967e+00 4.82938981e+00 4.86518282e+00
 3.69966678e-01 2.88469460e+02 9.82314409e+02 3.45615314e+02
 5.49652212e+00 6.34309464e+00 5.95498353e+00 1.92104479e+02
 8.85308255e+00 3.51523308e+00 6.06645449e+00 5.30643579e-01
 2.03913130e+02 7.47653621e+02 1.85810723e+02 1.57003744e+00
 6.57434653e+00 9.41991429e+00 3.80693336e+02 2.42148623e+00
 5.97381248e+00 4.68824858e+00 7.36206840e-01 4.60964599e-01
 5.42110536e-01 6.55644502e-01 6.03880206e-01 5.93898896e-01
 4.93842705e-01 5.41692610e-01 5.20502592e-01 6.42027112e-01
 3.91594439e-01]
2025-04-14 05:06:52,768 - pyswarms.single.global_best - INFO - Optimize for 7 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-14 06:43:04,289 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.2455555555555556, best pos: [9.09109982e+00 5.69201174e+02 7.98092143e+02 7.12389065e+01
 4.56601339e+00 6.51565922e+00 8.63040613e+00 1.70724113e+02
 3.89823487e+00 3.68728924e+00 8.46010179e+00 8.50474114e-01
 2.60683152e+02 9.92475817e+02 2.03596178e+02 8.08631870e+00
 8.89503429e+00 8.25169391e+00 3.45567370e+02 4.18578634e+00
 5.05437065e+00 2.21180037e+00 7.25420409e-01 3.18974180e+02
 2.56481643e+02 1.86085232e+02 9.74217047e+00 5.88500974e+00
 2.39233737e+00 4.41608739e+01 1.62530402e+00 2.52434950e+00
 4.08094033e+00 2.88943472e-01 8.35327455e+02 5.64258687e+01
 7.36966465e+01 2.24163597e+00 9.08452525e+00 2.88105602e+00
 2.50969486e+02 5.34542017e+00 2.22923636e+00 2.79243343e+00
 1.72109490e-01 7.25951235e+01 1.72061580e+02 1.28729517e+02
 4.06431921e+00 9.06246855e+00 5.68334128e+00 3.52227505e+02
 8.49553506e+00 4.27900997e+00 4.29044036e+00 6.23325683e-01
 9.91635730e+02 8.09895448e+00 3.40217583e+02 6.86097265e+00
 4.14945054e+00 2.91909421e+00 3.24763579e+01 5.91417313e+00
 5.03072566e+00 1.50224397e+00 1.25922046e-01 5.20582882e+02
 6.60706465e+02 1.04123525e+01 7.18310877e+00 2.46385437e+00
 1.07394161e+00 3.72415834e+02 6.47941907e+00 2.69688453e+00
 4.75319307e+00 2.94750310e-01 1.81246911e+02 9.90895547e+02
 4.72954242e+02 7.06752011e+00 6.17709614e+00 5.35030247e+00
 6.36275490e+01 5.27814925e+00 5.68274422e+00 1.00404546e+00
 2.35790544e-01 5.62847819e+02 1.78778328e+02 4.81142439e+02
 1.34037153e+00 7.03987869e+00 3.98404636e+00 4.02074456e+02
 2.07086402e+00 2.67842570e+00 6.67241671e+00 1.12619671e-01
 8.94242596e+02 6.77458691e+02 2.84298633e+02 6.95137218e+00
 3.11593415e+00 2.59297666e+00 2.72840260e+01 1.70969525e+00
 5.37734698e+00 6.01205059e+00 6.48899128e-01 7.70617581e-01
 6.67337412e-01 1.75307449e-01 1.44643098e-01 6.22675613e-01
 2.34579033e-01 7.13787968e-01 4.04275263e-01 5.18516750e-01
 8.88921786e-01]
2025-04-14 06:43:13,392 - pyswarms.single.global_best - INFO - Optimize for 7 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-14 08:18:55,542 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.2544444444444444, best pos: [2.78408668e+00 6.78604789e+02 4.78619201e+02 2.31959422e+01
 9.85320307e+00 2.46968591e+00 4.89050254e+00 4.04157609e+02
 1.48970453e+00 9.77802707e+00 9.30075922e+00 8.83800329e-01
 4.90913212e+02 7.72412095e+02 5.74949955e+01 6.06349060e+00
 9.36705332e+00 7.67707391e+00 3.85938364e+02 8.72701812e+00
 7.97265827e+00 6.99502074e+00 5.07960958e-01 6.81244732e+02
 3.81449191e+02 1.00711826e+02 1.16678134e+00 9.61994016e+00
 2.81360882e+00 2.08464645e+02 5.37800818e+00 6.41410808e+00
 7.50480210e+00 3.38213696e-01 2.55627504e+02 2.19745317e+02
 9.27196354e+00 3.33639342e+00 4.09159631e+00 1.81601511e+00
 2.34712988e+02 2.09261937e+00 2.60737005e+00 9.01864879e+00
 5.88878650e-01 1.29181112e+02 7.51297794e+02 1.73940697e+02
 7.37293317e+00 4.32863394e+00 3.63196103e+00 3.76121475e+02
 3.71116523e+00 7.97471771e+00 9.87263257e+00 4.79587340e-01
 8.72462006e+02 6.73331364e+02 3.06700889e+02 3.91019434e+00
 6.26576719e+00 5.61890890e+00 3.28948422e+02 9.87050750e+00
 5.48843461e+00 5.88839430e+00 6.16765261e-01 3.88575345e+02
 1.91140462e+02 8.93993030e+01 5.32277460e+00 6.85173965e+00
 8.97234717e+00 4.96956760e+02 3.44635659e+00 5.16119809e+00
 8.74053972e+00 7.31508816e-01 6.68057663e+02 4.04282327e+02
 4.79460598e+02 4.06283974e+00 2.52945274e+00 7.34170878e+00
 2.96097309e+02 8.06950515e+00 9.10883797e+00 7.45507843e+00
 1.39124613e-01 4.66691607e+02 8.43230959e+02 1.29989858e+02
 4.82985618e+00 7.42518323e+00 6.23856058e+00 1.09111097e+02
 5.02136041e+00 5.95066780e+00 9.99581637e+00 1.61807179e-01
 7.10645334e+02 7.00472126e+02 2.53482623e+02 2.09785095e+00
 7.38511531e+00 6.81087737e+00 2.27123296e+02 4.14336197e+00
 6.95829790e+00 6.34086434e+00 8.61023751e-01 6.41851352e-01
 7.35660003e-01 5.55463231e-01 5.76811621e-01 4.89677797e-01
 3.08135492e-01 5.56339233e-01 4.64765196e-01 6.54659590e-01
 9.89273210e-01]
2025-04-14 08:19:07,982 - pyswarms.single.global_best - INFO - Optimize for 7 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-15 23:57:50,861 - pyswarms.single.global_best - INFO - Optimize for 7 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-16 00:01:55,668 - pyswarms.single.global_best - INFO - Optimize for 7 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-16 00:15:49,380 - pyswarms.single.global_best - INFO - Optimize for 7 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-16 00:35:15,685 - pyswarms.single.global_best - INFO - Optimize for 7 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-16 00:39:34,733 - pyswarms.single.global_best - INFO - Optimize for 7 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-16 00:52:50,388 - pyswarms.single.global_best - INFO - Optimize for 7 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-16 00:54:10,314 - pyswarms.single.global_best - INFO - Optimize for 7 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-16 10:04:47,222 - pyswarms.single.global_best - INFO - Optimize for 7 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-16 11:55:58,940 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.21746031746031735, best pos: [3.82504489e+00 7.60152592e+02 9.93943502e+02 4.05069486e+02
 3.62340231e+00 6.06580531e+00 6.22165430e+00 1.04367773e+02
 7.45917378e+00 2.64289553e+00 8.19984525e+00 4.07937375e-01
 9.71339043e+02 3.17932377e+02 2.91474772e+02 1.57744196e+00
 5.02068481e+00 1.89904484e+00 3.22183781e+02 3.23722552e+00
 9.16664700e+00 3.31810856e+00 6.87725840e-01 2.42737033e+02
 6.57862312e+02 1.50339026e+02 8.40344243e+00 4.85786964e+00
 2.52258869e+00 1.48815139e+02 9.13235338e+00 8.35312103e+00
 2.60993312e+00 7.92770115e-01 4.59017501e+02 6.96780987e+02
 1.92908271e+02 1.80080060e+00 6.11898420e+00 8.87635541e+00
 1.67209700e+02 6.98039496e+00 5.58690679e+00 1.14783607e+00
 2.20486600e-01 2.79876842e+02 7.16014903e+02 6.89560813e+01
 5.07627270e+00 5.30249107e+00 4.46725686e+00 4.25984027e+02
 1.23549991e+00 4.42405686e+00 7.77137207e+00 2.81017514e-01
 3.51765741e+02 4.29547180e+02 2.44931409e+02 7.13127528e+00
 5.49932063e+00 7.03372582e+00 2.27338967e+02 9.11782139e+00
 8.89986201e+00 5.29699937e+00 7.35901001e-01 7.53823215e+02
 4.86817393e+02 3.80370329e+00 9.88411129e+00 5.31282238e+00
 4.80684125e+00 2.47499711e+02 7.24505560e+00 9.22676879e+00
 7.37077119e+00 3.26192815e-01 7.23395727e+02 5.09818075e+02
 4.37601104e+02 3.36929564e+00 7.70676634e+00 7.30701560e+00
 3.09565696e+02 5.25582144e+00 4.13886705e+00 6.25210873e+00
 3.67771739e-01 6.52445321e+02 5.41280217e+02 1.58593301e+02
 4.79075778e+00 4.98343838e+00 2.05376944e+00 1.45022822e+02
 7.08577713e+00 5.30258327e+00 5.84241490e+00 9.10106559e-01
 4.76779527e+02 5.28277842e+02 2.49785101e+01 4.87570629e+00
 3.66028426e+00 6.18578938e+00 4.72921871e+02 8.61575679e+00
 4.91109526e+00 7.24154511e+00 4.94835019e-01 9.24513665e-01
 4.70289200e-01 9.58477593e-01 5.77283018e-01 3.77128395e-01
 6.51951625e-01 1.15121380e-01 6.23718528e-01 3.17449708e-01
 3.59607996e-01]
2025-04-16 11:56:06,886 - pyswarms.single.global_best - INFO - Optimize for 7 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-18 12:43:28,215 - pyswarms.single.global_best - INFO - Optimize for 7 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-18 12:43:57,234 - pyswarms.single.global_best - INFO - Optimize for 7 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
