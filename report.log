2025-04-05 12:02:35,743 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 12:02:42,795 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 12:02:47,892 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 12:03:05,232 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 12:03:05,558 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.23503929653812758, best pos: [-3.25390236  0.4814764  -1.12744998  2.39427585 -1.41702696 -0.17541081
  2.14333908  1.56822468  1.00170732 -1.26579245 -0.41971509 -2.94074025
  2.7489274 ]
2025-04-05 12:03:07,478 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 12:03:07,815 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.14864632035693887, best pos: [ 0.19611661 -1.18492404  0.94459195  1.5577646   0.67188043 -0.5135765
  0.3467423   2.01256263  0.14045318  0.10124233  0.29511352  1.52219439
  0.39010896]
2025-04-05 12:03:13,227 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 12:03:16,682 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 12:03:17,015 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.10538555745518044, best pos: [-0.06384936  0.61850868  0.05365457  0.27228266  1.95715634  1.60784739
  0.29661951  0.48290204  0.45019107  1.64234135  1.1755023   1.00446568
  0.16876637]
2025-04-05 12:03:25,631 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 12:03:29,152 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 12:03:29,473 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.2266550945705232, best pos: [ 1.36281922  0.51814918  1.21431479  2.15550993 -1.27568289  1.84225099
  1.27035341  1.49329407  1.59034572  1.69529798  0.33733961  1.29526583
  0.77733546]
2025-04-05 12:03:33,464 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 12:03:33,800 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.036301412376693695, best pos: [ 1.33475204 -0.37364997  1.09348897  1.44855097  0.02579913  0.70692201
 -0.04649849  0.04679122  0.22465016  1.0837799   0.584251    0.36822507
  0.62402373]
2025-04-05 12:04:07,399 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 12:08:55,493 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 12:08:55,955 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.04590158908001975, best pos: [ 0.20021798  0.21520582  0.2112607  -0.2579771   0.07521798  0.38401805
  0.06918796 -0.49949912  0.44866099  0.28835     0.25496107  0.63985867
 -0.07065264]
2025-04-05 12:08:59,638 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 12:09:00,078 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.009764777906320715, best pos: [ 0.17323031  0.2064239  -0.18288652 -0.16488378 -0.17508944  0.1093268
  0.09824508  0.10434762 -0.02952796  0.23903552 -0.06048886  0.17946244
 -0.39031284]
2025-04-05 12:09:02,396 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 12:09:02,838 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.06498795738549061, best pos: [-0.52700793  0.40420745  0.85220416  0.68444545  0.47496016 -0.22584595
 -0.00875682  0.07361225 -0.09980719 -0.47532539  0.25630049 -0.24861748
 -0.11491254]
2025-04-05 12:14:34,105 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 12:15:45,366 - pyswarms.backend.generators - ERROR - generate_swarm() takes an int for n_particles and dimensions and an array for bounds
Traceback (most recent call last):
  File "/home/gustavo/.venv/experimentos_doutorado/lib/python3.13/site-packages/pyswarms/backend/generators.py", line 81, in generate_swarm
    pos = center * np.random.uniform(
                   ~~~~~~~~~~~~~~~~~^
        low=min_bounds, high=max_bounds, size=(n_particles, dimensions)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "numpy/random/mtrand.pyx", line 1190, in numpy.random.mtrand.RandomState.uniform
  File "_common.pyx", line 621, in numpy.random._common.cont
  File "_common.pyx", line 529, in numpy.random._common.cont_broadcast_2
TypeError: 'tuple' object cannot be interpreted as an integer
2025-04-05 12:15:53,072 - pyswarms.backend.generators - ERROR - generate_swarm() takes an int for n_particles and dimensions and an array for bounds
Traceback (most recent call last):
  File "/home/gustavo/.venv/experimentos_doutorado/lib/python3.13/site-packages/pyswarms/backend/generators.py", line 81, in generate_swarm
    pos = center * np.random.uniform(
                   ~~~~~~~~~~~~~~~~~^
        low=min_bounds, high=max_bounds, size=(n_particles, dimensions)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "numpy/random/mtrand.pyx", line 1190, in numpy.random.mtrand.RandomState.uniform
  File "_common.pyx", line 621, in numpy.random._common.cont
  File "_common.pyx", line 529, in numpy.random._common.cont_broadcast_2
TypeError: 'tuple' object cannot be interpreted as an integer
2025-04-05 12:17:02,410 - pyswarms.backend.generators - ERROR - generate_swarm() takes an int for n_particles and dimensions and an array for bounds
Traceback (most recent call last):
  File "/home/gustavo/.venv/experimentos_doutorado/lib/python3.13/site-packages/pyswarms/backend/generators.py", line 81, in generate_swarm
    pos = center * np.random.uniform(
                   ~~~~~~~~~~~~~~~~~^
        low=min_bounds, high=max_bounds, size=(n_particles, dimensions)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "numpy/random/mtrand.pyx", line 1190, in numpy.random.mtrand.RandomState.uniform
  File "_common.pyx", line 621, in numpy.random._common.cont
  File "_common.pyx", line 529, in numpy.random._common.cont_broadcast_2
TypeError: 'tuple' object cannot be interpreted as an integer
2025-04-05 12:17:15,093 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 12:17:15,491 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.23680109729313142, best pos: [ 8.72502491e-02 -1.81063486e-04  2.00892503e-02 -6.64649291e-02
  9.86173577e-03 -8.67179862e-02 -8.82812342e-03  3.61270835e-01
  1.68034677e-02 -9.70589084e-03 -1.07837844e-01  2.71651190e-01
  1.88559942e-02]
2025-04-05 12:17:30,666 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 12:17:50,830 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 12:18:30,844 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:20:10,403 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:20:49,013 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:21:04,815 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:21:23,021 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.58, best pos: [  5.66244281   5.30094468   8.43561773 348.3838727 ]
2025-04-05 14:22:35,271 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:23:49,681 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:25:29,039 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.665, best pos: [  8.847441     4.62114807   5.51648914 265.26296895]
2025-04-05 14:26:38,060 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:28:18,990 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.71, best pos: [  5.51980236   2.41559153   6.13838588 390.16511593]
2025-04-05 14:30:43,396 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:30:47,842 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.675, best pos: [ 7.83698961  4.3825217   7.78880778 18.06525578]
2025-04-05 14:31:01,042 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:31:04,847 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.675, best pos: [ 7.83698961  4.3825217   7.78880778 18.06525578]
2025-04-05 14:31:06,844 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:31:10,707 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.675, best pos: [ 7.83698961  4.3825217   7.78880778 18.06525578]
2025-04-05 14:31:55,928 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:31:59,792 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.675, best pos: [ 7.83698961  4.3825217   7.78880778 18.06525578]
2025-04-05 14:34:57,348 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:35:02,007 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.5555555555555556, best pos: [  8.03166445   2.02118142   9.44743285 487.14985606]
2025-04-05 14:35:06,489 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:35:10,422 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.5555555555555556, best pos: [  8.03166445   2.02118142   9.44743285 487.14985606]
2025-04-05 14:35:49,238 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:35:53,355 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.5555555555555556, best pos: [  8.03166445   2.02118142   9.44743285 487.14985606]
2025-04-05 14:36:04,554 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:36:08,459 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.5555555555555556, best pos: [  8.03166445   2.02118142   9.44743285 487.14985606]
2025-04-05 14:36:45,523 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:36:49,610 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.5555555555555556, best pos: [  8.03166445   2.02118142   9.44743285 487.14985606]
2025-04-05 14:36:52,901 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:36:56,709 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.5555555555555556, best pos: [  8.03166445   2.02118142   9.44743285 487.14985606]
2025-04-05 14:37:28,651 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:37:32,926 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.5555555555555556, best pos: [  8.03166445   2.02118142   9.44743285 487.14985606]
2025-04-05 14:37:36,632 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:37:40,665 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.5555555555555556, best pos: [  8.03166445   2.02118142   9.44743285 487.14985606]
2025-04-05 14:37:50,565 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:38:14,136 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:38:18,450 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.5555555555555556, best pos: [  7.35248335   9.7178675    7.50424008 418.64497324]
2025-04-05 14:38:38,758 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:38:43,303 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.5555555555555556, best pos: [  7.35248335   9.7178675    7.50424008 418.64497324]
2025-04-05 14:39:45,665 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:41:25,752 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:42:21,407 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:42:27,061 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:42:41,825 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.7222222222222222, best pos: [131.3576201    1.75832939   4.98410887   6.72573001]
2025-04-05 14:43:24,463 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:43:39,069 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.7222222222222222, best pos: [131.3576201    1.75832939   4.98410887   6.72573001]
2025-04-05 14:43:51,710 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:44:14,845 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.18518518518518523, best pos: [187.86264565   5.10315669   6.35746182   6.06881716]
2025-04-05 14:48:55,571 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:49:20,151 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.18518518518518523, best pos: [187.86264565   5.10315669   6.35746182   6.06881716]
2025-04-05 14:49:23,240 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 14:59:08,631 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 15:00:03,163 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.16666666666666663, best pos: [96.56594647  5.00680441  8.63466171  3.08446524]
2025-04-05 15:01:06,195 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 15:01:58,425 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.16666666666666663, best pos: [96.56594647  5.00680441  8.63466171  3.08446524]
2025-04-05 15:02:30,191 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 15:03:22,715 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.16666666666666663, best pos: [96.56594647  5.00680441  8.63466171  3.08446524]
2025-04-05 15:03:48,417 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 15:04:41,613 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.16666666666666663, best pos: [96.56594647  5.00680441  8.63466171  3.08446524]
2025-04-05 15:49:42,202 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 15:50:44,610 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.18518518518518523, best pos: [238.21470014   3.48029964   6.44754368   6.2978295 ]
2025-04-05 15:54:00,383 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 15:54:13,169 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 15:55:28,115 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.18518518518518523, best pos: [238.21470014   3.48029964   6.44754368   6.2978295 ]
2025-04-05 16:15:10,372 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 16:16:12,573 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.18518518518518523, best pos: [238.21470014   3.48029964   6.44754368   6.2978295 ]
2025-04-05 16:20:01,067 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 16:21:02,986 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.18518518518518523, best pos: [238.21470014   3.48029964   6.44754368   6.2978295 ]
2025-04-05 17:00:39,892 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 17:01:38,876 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.18518518518518523, best pos: [238.21470014   3.48029964   6.44754368   6.2978295 ]
2025-04-05 17:02:23,840 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-05 17:03:34,167 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.18518518518518523, best pos: [238.21470014   3.48029964   6.44754368   6.2978295 ]
2025-04-06 11:06:10,828 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-06 11:07:18,956 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.18518518518518523, best pos: [238.21470014   3.48029964   6.44754368   6.2978295 ]
2025-04-06 11:15:03,381 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 1.49445, 'c2': 1.49445, 'w': 0.729}
2025-04-06 11:16:01,291 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.18518518518518523, best pos: [238.21470014   3.48029964   6.44754368   6.2978295 ]
