#!/bin/bash

# DATASETS="australian_credit contraceptive german_credit heart iris pima wdbc wine"
DATASETS="australian_credit contraceptive german_credit"
EVALUATION_METRIC="silhouette dbc dbc_ss"
COMBINATION_METHODS="weighted_membership majority_voting cluster_density weighted_membership_entropy"
POSSIBLE_N_CLUSTERS="2 3"

for dataset in $DATASETS; do

    for mutual_info in 100 75 50; do

        for combination_method in $COMBINATION_METHODS; do

            for eval_metric in $EVALUATION_METRIC; do
                echo "======================================================"
                echo "Running ${dataset} ${mutual_info} ${eval_metric} ${combination_method} classifier selection..."
                echo "======================================================"
                python cbeg.py -d "$dataset" -n compare -m "$mutual_info" -e "$eval_metric" -c "$combination_method" -b

                echo "======================================================"
                echo "Running ${dataset} ${mutual_info} ${eval_metric} ${combination_method} default naive bayes..."
                echo "======================================================"
                python cbeg.py -d "$dataset" -n compare -m "$mutual_info" -e "$eval_metric" -c "$combination_method"
            done

            for n_clusters in $POSSIBLE_N_CLUSTERS; do
                echo "======================================================"
                echo "Running ${dataset} ${mutual_info} ${eval_metric} ${n_clusters} classifier selection..."
                echo "======================================================"
                python cbeg.py -d "$dataset" -n "$n_clusters" -m "$mutual_info" -c "$combination_method" -b

                echo "======================================================"
                echo "Running ${dataset} ${mutual_info} ${eval_metric} ${n_clusters} default naive bayes..."
                echo "======================================================"

                # Run only once for fixed number of clusters 
                python cbeg.py -d "$dataset" -n "$n_clusters" -m "$mutual_info" -c "$combination_method"
            done

        done

    done

done
